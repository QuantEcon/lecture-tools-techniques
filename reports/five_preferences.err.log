Traceback (most recent call last):
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Compute values for the certainty equivalent line 
intercept = 4.  # Intercept value
mask = (1. <= c_1_grid) & (c_1_grid <= 3.)  # Mask to keep only data between c_1=1 and c_1=3

# Initialize array 
certainty_equiv = np.ones(c_1_grid.size) * np.nan

# Fill relevant locations
certainty_equiv[mask] = (intercept - c_1_grid)[mask]


# Set up a fixed point problem to find intersections with x=x line
# Function used to approximate indifference curves using linear interpolation
func_approx = lambda c_1, fp: np.interp(c_1, c_1_grid, fp)  
x0 = 2.  # Initial guess

# Solve for fixed points
fp_CE = optimize.fixed_point(func_approx, x0, args=([certainty_equiv]))
fp_EU = optimize.fixed_point(func_approx, x0, args=([c_2_grid_EU]))
fp_mult = optimize.fixed_point(func_approx, x0, args=([c_2_grid_mult]))
fp_cons = optimize.fixed_point(func_approx, x0, args=([c_2_grid_cons]))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[25], line 21[0m
[1;32m     19[0m fp_EU [38;5;241m=[39m optimize[38;5;241m.[39mfixed_point(func_approx, x0, args[38;5;241m=[39m([c_2_grid_EU]))
[1;32m     20[0m fp_mult [38;5;241m=[39m optimize[38;5;241m.[39mfixed_point(func_approx, x0, args[38;5;241m=[39m([c_2_grid_mult]))
[0;32m---> 21[0m fp_cons [38;5;241m=[39m [43moptimize[49m[38;5;241;43m.[39;49m[43mfixed_point[49m[43m([49m[43mfunc_approx[49m[43m,[49m[43m [49m[43mx0[49m[43m,[49m[43m [49m[43margs[49m[38;5;241;43m=[39;49m[43m([49m[43m[[49m[43mc_2_grid_cons[49m[43m][49m[43m)[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/scipy/optimize/_minpack_py.py:1120[0m, in [0;36mfixed_point[0;34m(func, x0, args, xtol, maxiter, method)[0m
[1;32m   1118[0m use_accel [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mdel2[39m[38;5;124m'[39m: [38;5;28;01mTrue[39;00m, [38;5;124m'[39m[38;5;124miteration[39m[38;5;124m'[39m: [38;5;28;01mFalse[39;00m}[method]
[1;32m   1119[0m x0 [38;5;241m=[39m _asarray_validated(x0, as_inexact[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m-> 1120[0m [38;5;28;01mreturn[39;00m [43m_fixed_point_helper[49m[43m([49m[43mfunc[49m[43m,[49m[43m [49m[43mx0[49m[43m,[49m[43m [49m[43margs[49m[43m,[49m[43m [49m[43mxtol[49m[43m,[49m[43m [49m[43mmaxiter[49m[43m,[49m[43m [49m[43muse_accel[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/scipy/optimize/_minpack_py.py:1073[0m, in [0;36m_fixed_point_helper[0;34m(func, x0, args, xtol, maxiter, use_accel)[0m
[1;32m   1071[0m     p0 [38;5;241m=[39m p
[1;32m   1072[0m msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mFailed to converge after [39m[38;5;132;01m%d[39;00m[38;5;124m iterations, value is [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m (maxiter, p)
[0;32m-> 1073[0m [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m(msg)

[0;31mRuntimeError[0m: Failed to converge after 500 iterations, value is nan
RuntimeError: Failed to converge after 500 iterations, value is nan

